<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<?xml-stylesheet ekr_test ?>
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="amd.20150913232631.1"><vh>@settings</vh>
<v t="amd.20150913232631.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="amd.20150913232631.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="amd.20150919102739.1"><vh>專案架構</vh>
<v t="amd.20150919113520.1"><vh>@edit .gitignore</vh></v>
<v t="amd.20151007224830.1"><vh>Jupyter 安裝與執行</vh></v>
<v t="amd.20150919103357.1"><vh>pelican 設定</vh></v>
</v>
<v t="123.20151208171418.1" a="E"><vh>以下為 pelican 文章</vh>
<v t="123.20151208171418.2"><vh>@button user pelican</vh></v>
<v t="123.20151208171418.3" a="E"><vh>@path pelican</vh>
<v t="12.20151229181938.1"><vh>@edit publishconf.py</vh></v>
<v t="12.20151229181952.1" a="E"><vh>@path content</vh>
<v t="12.20151229181952.2"><vh>@edit 2015cpnote1.md</vh></v>
<v t="12.20151229181952.3"><vh>@edit 40323248_cp_w2.md</vh></v>
<v t="12.20151229181952.4"><vh>@edit 40323248_cp_w4.md</vh></v>
<v t="12.20151229181952.5"><vh>@edit 40323248_cp_w5.md</vh></v>
<v t="12.20151229181952.6"><vh>@edit 40323248_cp_w6.md</vh></v>
<v t="12.20151229181952.7"><vh>@edit 40323248_cp_w8.md</vh></v>
</v>
</v>
</v>
<v t="123.20151208171423.1" a="E"><vh>以下為 reveal 投影片</vh>
<v t="12.20151229181918.3"><vh>@clean 40323248_cp_w2.html</vh>
<v t="12.20151229181918.4"><vh>檔案說明</vh></v>
<v t="12.20151229181918.5"><vh>html 標註</vh>
<v t="12.20151229181918.6"><vh>body 標註</vh>
<v t="12.20151229181918.7"><vh>div class="reveal"</vh>
<v t="12.20151229181918.8"><vh>div class="slides"</vh>
<v t="12.20151229181918.9"><vh>標題</vh></v>
<v t="12.20151229181918.10"><vh>作業任務一</vh></v>
<v t="12.20151229181918.11"><vh>自評</vh></v>
</v>
</v>
<v t="12.20151229181918.12"><vh>script</vh></v>
</v>
</v>
</v>
<v t="12.20151229181918.13"><vh>@clean 40323248_cp_w4.html</vh>
<v t="12.20151229181918.14"><vh>檔案說明</vh></v>
<v t="12.20151229181918.15"><vh>html 標註</vh>
<v t="12.20151229181918.16"><vh>body 標註</vh>
<v t="12.20151229181918.17"><vh>div class="reveal"</vh>
<v t="12.20151229181918.18"><vh>div class="slides"</vh>
<v t="12.20151229181918.19"><vh>標題</vh></v>
<v t="12.20151229181918.20"><vh>作業任務一</vh></v>
<v t="12.20151229181918.21"><vh>自評</vh></v>
</v>
</v>
<v t="12.20151229181918.22"><vh>script</vh></v>
</v>
</v>
</v>
<v t="12.20151229181918.23"><vh>@clean 40323248_cp_w5.html</vh>
<v t="12.20151229181918.24"><vh>檔案說明</vh></v>
<v t="12.20151229181918.25"><vh>html 標註</vh>
<v t="12.20151229181918.26"><vh>body 標註</vh>
<v t="12.20151229181918.27"><vh>div class="reveal"</vh>
<v t="12.20151229181918.28"><vh>div class="slides"</vh>
<v t="12.20151229181918.29"><vh>標題</vh></v>
<v t="12.20151229181918.30"><vh>作業任務一</vh></v>
<v t="12.20151229181918.31"><vh>自評</vh></v>
</v>
</v>
<v t="12.20151229181918.32"><vh>script</vh></v>
</v>
</v>
</v>
<v t="12.20151229181918.33"><vh>@clean 40323248_cp_w6.html</vh>
<v t="12.20151229181918.34"><vh>檔案說明</vh></v>
<v t="12.20151229181918.35"><vh>html 標註</vh>
<v t="12.20151229181918.36"><vh>body 標註</vh>
<v t="12.20151229181918.37"><vh>div class="reveal"</vh>
<v t="12.20151229181918.38"><vh>div class="slides"</vh>
<v t="12.20151229181918.39"><vh>標題</vh></v>
<v t="12.20151229181918.40"><vh>作業任務一</vh></v>
<v t="12.20151229181918.41"><vh>自評</vh></v>
</v>
</v>
<v t="12.20151229181918.42"><vh>script</vh></v>
</v>
</v>
</v>
<v t="12.20151229181918.43"><vh>@clean 40323248_cp_w8.html</vh>
<v t="12.20151229181918.44"><vh>檔案說明</vh></v>
<v t="12.20151229181918.45"><vh>html 標註</vh>
<v t="12.20151229181918.46"><vh>body 標註</vh>
<v t="12.20151229181918.47"><vh>div class="reveal"</vh>
<v t="12.20151229181918.48"><vh>div class="slides"</vh>
<v t="12.20151229181918.49"><vh>標題</vh></v>
<v t="12.20151229181918.50"><vh>作業任務一</vh></v>
<v t="12.20151229181918.51"><vh>自評</vh></v>
<v t="12.20151229181918.52"><vh>標題二</vh></v>
<v t="12.20151229181918.53"><vh>作業任務二</vh></v>
<v t="12.20151229181918.54"><vh>自評</vh></v>
<v t="12.20151229181918.55"><vh>標題三</vh></v>
<v t="12.20151229181918.56"><vh>作業任務三</vh></v>
<v t="12.20151229181918.57"><vh>自評</vh></v>
<v t="12.20151229181918.58"><vh>標題四</vh></v>
<v t="12.20151229181918.59"><vh>作業任務四</vh></v>
<v t="12.20151229181918.60"><vh>自評</vh></v>
</v>
</v>
<v t="12.20151229181918.61"><vh>script</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="12.20151229181918.10">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;第一周:&lt;br&gt;複習git add  git push 操作&lt;br&gt;
    第二周:&lt;br&gt;使用git在github管理個人資料利用Leo Editor 更改 有關於我的作業 ，作業任務，及我的投影片，save後再推至遠端剛開始點開start並沒有Leo&lt;br&gt;要至https://github.com/leo-editor/leo-editor 下載得到目錄之後再把leo檔案傳至Ana3→Lib→site packages 丟start到編輯器修改&lt;br&gt;之後到2015Fall CADP 第2週 下載reveal 在自己github件一個倉儲 建分支 git clone git branch(檢查分支) git checkout gh-pages →git commit -m ""→git push→pip install pelicam Markdown→貼回自己的檔案，推回去，開Leo編輯reveal.leo 改投影片內容&lt;br&gt;完成後存檔 開啟simplest，可以在近端確定自己改的投影片內容，沒問題即在push回去  &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
	
</t>
<t tx="12.20151229181918.11">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt;修改作業時，遇到許多狀況，修改許久還是沒有改善問題，經過跟同學們一番討論，才能排除許多問題原因，像是遲遲無法推上去分支，遠端網頁無法顯示之類的，一年級上的python就覺得英文很重要，應該是說不論是課堂上，還是日常生活上，學會第二語言是重要的，還有要完全瞭解整個步驟，如何創分支，如何利用Leo Editor更改架網頁，如何SciTE 文字編輯器, 經由python.properties 設定, 可以在編輯器中執行簡單的 Python 3 程式等等，才能知道自己在做些什麼，不然只是一步錯，步步錯。&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.12">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="12.20151229181918.13">@language xml
@tabwidth -4
@others

</t>
<t tx="12.20151229181918.14">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="12.20151229181918.15">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="12.20151229181918.16">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="12.20151229181918.17">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.18">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.19">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;10月11日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.20">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;cd tmp→git clone 上次所創的倉儲專案網址→cd 專案→ git branch 檢查分支→git checkout gh-pages 移至分頁→之後開啟 readme.md 確認連結是否正確 README→啟動reveal.leo →複製edit 2015 cphww1 跟 simplest →改日期跟名字、標題、iframe src="simplest.html"改simplest2→在切換button pelican content之後按 pelican-content 確認執行完畢→練習solvespace.exe 繪圖→練習後畫好截圖→把圖丟進資料夾images→推回去git add -A →git commit -m "a"→git push origin gh-pages &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.21">&lt;section&gt;
    &lt;h2&gt;自評85分&lt;/h2&gt;
    &lt;p&gt;第一次使用solvespace.exe繪圖軟體很不上手，以往的inventor差異極大，經由同學指導，了解大部分的指令步驟，也知道要如何再建一個新的分頁，看了solve space官網的教學步驟  深深認為英文真的非常非常的重要，現在還是無法完整了解，遇到沒見過的單字就卡住，希望我能更深入了解電腦輔助設計!&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;
		
        
				
</t>
<t tx="12.20151229181918.22">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="12.20151229181918.23">@language xml
@tabwidth -4
@others

</t>
<t tx="12.20151229181918.24">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="12.20151229181918.25">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="12.20151229181918.26">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="12.20151229181918.27">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.28">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.29">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;10月19日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.3">@language xml
@tabwidth -4
@others

</t>
<t tx="12.20151229181918.30">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;cd tmp→git clone 上次所創的倉儲專案網址→cd 專案→ git branch 檢查分支→git checkout gh-pages 移至分頁→之後開啟 readme.md 確認連結是否正確 README→啟動reveal.leo →複製edit 2015 cphww1 跟 simplest →改日期跟名字、標題、iframe src="simplest.html"改simplest3→在切換button pelican content之後按 pelican-content 確認執行完畢→練習Creo Parametric 繪製方塊及連接桿→練習時錄製影片→並把影片上傳至vimeo→複製嵌入程式碼→推回去git add -A →git commit -m "a"→git push origin gh-pages &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="12.20151229181918.31">&lt;section&gt;
    &lt;h2&gt;自評80分&lt;/h2&gt;
    &lt;p&gt;上週使用solvespace.exe繪圖軟體很不上手，以往的inventor差異極大，經由同學指導，了解大部分的指令步驟，這週則是使用Creo Parametric 繪製方塊及連接桿 以及熟悉指令，但跟inventor比Creo Parametric的一些操作指令還是有些不便，還有錄製過程影片的時間還要多加把握 &lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;
		
        
				
</t>
<t tx="12.20151229181918.32">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="12.20151229181918.33">@language xml
@tabwidth -4
@others

</t>
<t tx="12.20151229181918.34">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="12.20151229181918.35">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="12.20151229181918.36">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="12.20151229181918.37">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.38">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.39">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;11月7日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.4">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="12.20151229181918.40">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt; 利用 Leo Editor 摘要重點, 建立個人 Github 課程倉儲 (名稱為 2015cadpb，練習solvespace及cero parametric ,並繪製腳踏車零件 &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
</t>
<t tx="12.20151229181918.41">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt; 這週還是多多練習Cero parametric  ,盡量讓它上手,也謝謝同學在我不懂的時候不厭其煩的教我&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;
		
        
				
</t>
<t tx="12.20151229181918.42">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="12.20151229181918.43">@language xml
@tabwidth -4
@others

</t>
<t tx="12.20151229181918.44">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="12.20151229181918.45">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="12.20151229181918.46">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="12.20151229181918.47">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.48">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.49">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;9月24日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.5">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="12.20151229181918.50">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;第一周:&lt;br&gt;複習git add  git push 操作&lt;br&gt;
    第二周:&lt;br&gt;使用git在github管理個人資料利用Leo Editor 更改 有關於我的作業 ，作業任務，及我的投影片，save後再推至遠端剛開始點開start並沒有Leo&lt;br&gt;要至https://github.com/leo-editor/leo-editor 下載得到目錄之後再把leo檔案傳至Ana3→Lib→site packages 丟start到編輯器修改&lt;br&gt;之後到2015Fall CADP 第2週 下載reveal 在自己github件一個倉儲 建分支 git clone git branch(檢查分支) git checkout gh-pages →git commit -m ""→git push→pip install pelicam Markdown→貼回自己的檔案，推回去，開Leo編輯reveal.leo 改投影片內容&lt;br&gt;完成後存檔 開啟simplest，可以在近端確定自己改的投影片內容，沒問題即在push回去  &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
	
</t>
<t tx="12.20151229181918.51">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt;修改作業時，遇到許多狀況，修改許久還是沒有改善問題，經過跟同學們一番討論，才能排除許多問題原因，像是遲遲無法推上去分支，遠端網頁無法顯示之類的，一年級上的python就覺得英文很重要，應該是說不論是課堂上，還是日常生活上，學會第二語言是重要的，還有要完全瞭解整個步驟，如何創分支，如何利用Leo Editor更改架網頁，如何SciTE 文字編輯器, 經由python.properties 設定, 可以在編輯器中執行簡單的 Python 3 程式等等，才能知道自己在做些什麼，不然只是一步錯，步步錯。&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.52">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;10月11日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.53">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;第四周:&lt;br&gt;複習git add  git push 操作&lt;br&gt;
    第四周:&lt;br&gt;cd tmp→git clone 上次所創的倉儲專案網址→cd 專案→ git branch 檢查分支→git checkout gh-pages 移至分頁→之後開啟 readme.md 確認連結是否正確 README→啟動reveal.leo →複製edit 2015 cphww1 跟 simplest →改日期跟名字、標題、iframe src="simplest.html"改simplest2→在切換button pelican content之後按 pelican-content 確認執行完畢→練習solvespace.exe 繪圖→練習後畫好截圖→把圖丟進資料夾images→推回去git add -A →git commit -m "a"→git push origin gh-pages &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
	
</t>
<t tx="12.20151229181918.54">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt;第一次使用solvespace.exe繪圖軟體很不上手，以往的inventor差異極大，經由同學指導，了解大部分的指令步驟，也知道要如何再建一個新的分頁，看了solve space官網的教學步驟  深深認為英文真的非常非常的重要，現在還是無法完整了解，遇到沒見過的單字就卡住，希望我能更深入了解電腦輔助設計&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.55">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;10月11日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.56">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;第五周:&lt;br&gt;複習git add  git push 操作&lt;br&gt;cd tmp→git clone 上次所創的倉儲專案網址→cd 專案→ git branch 檢查分支→git checkout gh-pages 移至分頁→之後開啟 readme.md 確認連結是否正確 README→啟動reveal.leo →複製edit 2015 cphww1 跟 simplest →改日期跟名字、標題、iframe src="simplest.html"改simplest3→在切換button pelican content之後按 pelican-content 確認執行完畢→練習Creo Parametric 繪製方塊及連接桿→練習時錄製影片→並把影片上傳至vimeo→複製嵌入程式碼→推回去git add -A →git commit -m "a"→git push origin gh-pages &lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
	
</t>
<t tx="12.20151229181918.57">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt;上週使用solvespace.exe繪圖軟體很不上手，以往的inventor差異極大，經由同學指導，了解大部分的指令步驟，這週則是使用Creo Parametric 繪製方塊及連接桿 以及熟悉指令，但跟inventor比Creo Parametric的一些操作指令還是有些不便，還有錄製過程影片的時間還要多加把握&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.58">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;11月07日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181918.59">&lt;section id="hw-task-one"&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;p&gt;第五周:&lt;br&gt;複習git add  git push 操作&lt;br&gt; 利用 Leo Editor 摘要重點, 建立個人 Github 課程倉儲 (名稱為 2015cadpb，練習solvespace及cero parametric ,並繪製腳踏車零件&lt;/p&gt;
    &lt;p&gt;請參考 &lt;a href="http://yang-cheng-ru.github.io/capd923/2015cp_hw_w1.html"&gt;Yang-Cheng-Ru&lt;/a&gt;
&lt;/section&gt;
	
</t>
<t tx="12.20151229181918.6">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="12.20151229181918.60">&lt;section&gt;
    &lt;h2&gt;自評70分&lt;/h2&gt;
    &lt;p&gt; 這週還是多多練習Cero parametric  ,盡量讓它上手,也謝謝同學在我不懂的時候不厭其煩的教我&lt;/p&gt;
    &lt;p&gt;可以連結到內部投影片&lt;a href="#/hw-task-one"&gt;作業任務一&lt;/a&gt;
&lt;/section&gt;

				
</t>
<t tx="12.20151229181918.61">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="12.20151229181918.7">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.8">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="12.20151229181918.9">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
    &lt;h2&gt;四設計二乙&lt;/h2&gt;
    &lt;p&gt;40323248 楊承儒 &lt;br&gt;9月24日&lt;/p&gt;		
&lt;/section&gt;
	
    </t>
<t tx="12.20151229181952.1"></t>
<t tx="123.20151208171418.1"></t>
<t tx="123.20151208171418.2">@language python
import os
os.system("pelican pelican/content -o ./ -s pelican/publishconf.py -t ../../theme/pelican-octopress")
g.es("user pelican 執行完畢")</t>
<t tx="123.20151208171418.3"></t>
<t tx="123.20151208171423.1"></t>
<t tx="amd.20150913232631.1"></t>
<t tx="amd.20150913232631.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="amd.20150913232631.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="amd.20150919102739.1">主要為 reveal.js 的簡報目錄架構, 其他子目錄為

images - 存放簡報與 pelican 網誌所需要的影像檔案

pelican - 存放 pelican 專案資料檔, 並且設法讓 pelican 所產生的 output 檔案直接存放到上層 reveal.js 根目錄

content/notebook - 存放 Jupyter 的 IPython notebook 檔案, 然後再由 pelican 設定, 將內容放入 blog 文章中

</t>
<t tx="amd.20150919103357.1">打算利用

pelican pelican -o ./../ -s publishconf.py

-o 指定 ouput 所在目錄, 這裡使用上一層目錄, 

-s 則指定 setting, 這裡採用 publishconf.py 中的設定

將位於專案中 pelican 目錄內的 .md 檔案, 轉為 html 網誌格式, 然後存在 reveal.js 的架構目錄中

也就是 index.html 是由 pelican 控制</t>
<t tx="amd.20151007224830.1">安裝

sudo pip3 install jupyter

執行

jupyter notebook
</t>
</tnodes>
</leo_file>
